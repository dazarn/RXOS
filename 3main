#!/bin/bash
#
# Based on rxOC v_stopgap by fullzero & nvOC v0019-2.0 - Community Release by papampi, Stubo and leenoox
#
# RXOS v0.1 by dazarn
#
# USE ALL CAPS
#

source /home/m1/1bash

RXOS_ver="RXOS v0.1"                             # Do not edit this
RXOS_3main_ver="RXOS v0.1.001"                  # Do not edit this

#########################################################################
#########################################################################
#########################################################################
#########################################################################

echo ""
echo " $RXOS_ver"
echo ""
echo ""

sudo ldconfig /usr/local/cuda/lib64

GPUS=$(./rocm-smi -i | grep GPU | wc -l)

# to delete
#NVD=nvidia-settings
#SALFTER="NO"
#if [ $COIN == "SALFTER_NICEHASH_PROFIT_SWITCHING" ]
#then
#  SALFTER="YES"
#fi
#if [ $COIN == "SALFTER_MPH_PROFIT_SWITCHING" ]
#then
#  SALFTER="YES"
#fi

if [ $CLEAR_LOGS_ON_BOOT == "YES" ]
then
  sudo bash '/home/m1/clear_logs'
fi

if [ $LOG_ROTATE == "YES" ]
then
  HCD='/home/m1/log_rotate'
  running=$(ps -ef | awk '$NF~"log_rotate" {print $2}')
  if [ "$running" == "" ]
  then
    guake -n $HCD -r LOG_ROTATE -e "bash /home/m1/log_rotate"   # to modify or to add quake
    running=""
  fi
fi

#if [ $SALFTER == "NO" ]
#then
#  pkill -e miner
#fi

if [ $LOCALorREMOTE == "REMOTE" ]
then
  export DISPLAY=:0
fi
#
#___1050_or_1050ti="NO"
#
#NORMAL="NO"
#
#P106_100="NO"
#
#nvidia-smi -L > /tmp/tempa
#
#if grep -q "1050" /tmp/tempa;
#then
#  ___1050_or_1050ti="YES"
#fi
#
#if grep -q "P106-100" /tmp/tempa;
#then
#  ___1050_or_1050ti="YES"
#  P106_100="YES"
#fi
#
#if grep -q -E '1060|1070|1080' /tmp/tempa;
#then
#  NORMAL="YES"
#fi

#rm /tmp/tempa

#XORG="FAIL"

#if grep -q "28800" /etc/X11/xorg.conf;
#then
#  XORG="OK"
#fi

#if [ $SLOW_USB_KEY_MODE == "YES" ]
#then
#  sleep 6
#fi

#if [ $XORG == "FAIL" ]
#then
#  sudo cp '/etc/X11/xorg.conf.backup' '/etc/X11/xorg.conf'
#  echo ""
#  echo "Xorg PROBLEM DETECTED"
#  echo ""
#  echo "Restoring Xorg"
#  echo ""
#  echo "Rebooting in 5 seconds"
#  sleep 5
#  sudo reboot
#fi

if [ $AUTO_REBOOT == "YES" ]
then
  HCD='/home/m1/reboot'
  running=$(ps -ef | awk '$NF~"reboot" {print $2}')
  if [ "$running" == "" ]
  then
    guake -n $HCD -r AUTO_REBOOT -e "bash /home/m1/reboot"
    running=""
  fi
fi



if [ $AUTO_START_MINER == "YES" ]
then
  echo "Auto Start Miner Set to YES"
  if [ $MINER_WATCHDOG == "YES" ]
  then
    HCD='/home/m1/5watchdog'
    echo ""

    sleep 2
    running=$(ps -ef | awk '$NF~"5watchdog" {print $2}')
    if [ "$running" == "" ]
    then
      if [ $LOCALorREMOTE == "LOCAL" ]
      then
        echo "LAUNCHING:  MINER WATCHDOG"
        echo ""
        echo "process in screen wdog, guake terminal Tab (f12), ~/nvOC wdog-log"
        screen -c /home/m1/screenrc-watchdog -dmSL wdog bash /home/m1/5watchdog
        #guake -n $HCD -r MINER_WATCHDOG -e "bash /home/m1/5watchdog"
        #if guake tab is already showing watchdog output dont open a new one
        if [[ -z $(ps ax | grep "tail -f /home/m1/nvoc_logs/watchdog-screenlog.0" |grep -v grep) ]];then
          guake -n /home/m1/5watchdog -r MINER_WATCHDOG -e "tail -f  /home/m1/nvoc_logs/watchdog-screenlog.0 "
        fi
        echo ""
        running=""
      elif [ $LOCALorREMOTE == "REMOTE" ]
      then
        screen -c /home/m1/screenrc-watchdog -dmSL wdog bash /home/m1/5watchdog
        echo "LAUNCHING:  MINER WATCHDOG"
        echo ""
        echo "process in screen wdog; ~/nvOC wdog-log"
        running=""
      fi
    fi
  fi

  reup=0
  running=$(ps ax | grep -v cpuminer | grep -i screen | grep miner | awk '"miner" {print $1}')

  if [ "$running" != "" ]
  then
    target=$(ps ax | grep -v cpuminer | grep -i screen | grep miner | awk '"miner" {print $1}')
    kill $target
    reup=1
  fi
  sleep 2
  echo ""
  echo "LAUNCHING:  MINER"
  echo "    "
  running=$(ps ax | grep -v cpuminer | grep -i screen | grep miner | awk '"miner" {print $1}')
  if [ "$running" == "" ]
  then
    bash /home/m1/0miner
    echo "    "
    echo "    "$(ps ax | grep -i screen | grep miner | grep -o 'SCREEN.*')
    echo "    "
    if [ $LOCALorREMOTE == "REMOTE" ]
    then
      echo "Miner output: ~/nvOC miner-log"
      echo "    "
      echo "    "
      running=""
    elif [ $LOCALorREMOTE == "LOCAL" ]
    then
      screen -r miner
    fi
  fi

elif [ $AUTO_START_MINER == "NO" ]
then
  echo "    "
  echo "    "
  echo "Auto Start Miner is set to NO"
  echo "    "
  echo "Miner is not starting"
  echo "    "
  echo "    "
fi


# Infinite Loop
while true
do
  sleep 60
done
